Todo.와이어프레임 재구성

- 사람들이 불편해 했던 것 적기

https://excalidraw.com/#json=_kTv55IIBBGjR3dNoOvlj,FjX_Clf5QBzlfdUk-jB3aw

- 메모장 1
    
    🌟수집 - 정독 - 취합 - 액기스 제작 - 아이디어 붙이기
    
- 메모장 2
    
    Header
    Hero Section
    Call To Action
    Content Sections
    Testimonial
    Resource
    Footer
    
- 메모장 3
    
    MVP(Minimum Viable Product)
    작동하는 제품을 빠르게 출시해 시장 반응을 보는 데 초점을 둡니다.
    하지만 작동만 하면 충분할까요?
    
    MVE(Minimum Valuable Experience)
    MVE는 고객에게 가치 있는 경험을 제공하는 데 중점을 둡니다.
    단순히 기능을 넘어, 고객이 “이건 진짜 필요하다!“고 느끼게 만드는 것이 핵심입니다.
    
- 메모장 4
    1. **원활한 수집 경험**
        - 사용자가 자료를 수집할 때 “클릭 몇 번”만에 (혹은 단축키로) 텍스트, 이미지, 링크, 동영상 등 다양한 형태의 데이터를 빠르게 캡처할 수 있어야 합니다.
        - 수집 시점의 컨텍스트(탭 정보, 주변 검색어, 관련 링크 등)도 자동으로 저장되어 나중에 해당 정보의 배경을 쉽게 이해할 수 있어야 하죠.
    2. **자동화된 정리와 메타데이터 관리**
        - 수집된 데이터가 단순히 쌓이는 것이 아니라, 자동 백업, 중복 방지, 그리고 메타데이터 부여를 통해 **원본의 진본성과 무결성을 유지**하면서도 나중에 쉽게 활용할 수 있도록 체계화되어야 합니다.
        - “정독 → 취합 → 액기스 제작” 같은 과정을 가능한 한 사용자가 직접 개입하지 않아도, 시스템이 적절히 분류하고 요약해주는 기능이 중요합니다.
    3. **강력한 검색과 연결성**
        - 정보가 아무리 많이 모여도, 나중에 필요할 때 빠르고 정확하게 검색할 수 있어야 합니다.
        - 키워드, 맥락, 유의어 등 다양한 기준으로 검색할 수 있으며, 이를 위해 메타데이터 기반의 검색 엔진과, 필요시 LLM(대형 언어 모델)을 활용한 보조 검색 기능이 필요합니다.
    4. **사용자 친화적인 인터페이스**
        - ‘직관성’, ‘심플함’, ‘접근성’은 물론, **작업 흐름에 방해되지 않는** UI/UX가 핵심입니다.
        - 예를 들어, 윈도우의 미션 컨트롤처럼 항상 화면 한 켠에 가볍게 떠 있는 메모나, 간단하게 열고 닫을 수 있는 사이드바 같은 디자인은 사용자의 집중을 방해하지 않으면서도 항상 정보를 확인할 수 있게 해줍니다.
    5. **협업과 확장성**
        - 개인뿐 아니라 팀 단위의 협업에서도, 서로 다른 도구에 흩어진 기록들을 한데 모아 연결하고 활용할 수 있는 **통합 기록 시스템**도 고민해볼 만해요.
- 메모장 5
    
    각 항목을 현실적으로 구현하는 방법을 구체적인 기술과 워크플로우 관점에서 살펴보면 다음과 같습니다.
    
    ---
    
    ### 1. **원활한 수집 경험**
    
    - **브라우저 확장 프로그램 및 시스템 통합**
        - **브라우저 확장 프로그램**: 크롬, 파이어폭스 등에서 동작하는 확장 프로그램을 개발하여, 사용자가 웹페이지에서 텍스트, 이미지, 링크 등을 선택하면 한 번의 클릭이나 단축키로 데이터를 캡처할 수 있게 합니다.
        - **시스템 단축키/클립보드 모니터링**: 데스크탑 애플리케이션(Tauri 기반)을 통해 운영체제 수준에서 단축키를 감지하거나 클립보드 변경을 모니터링하여, 스크린샷이나 복사된 텍스트 등을 자동으로 캡처할 수 있습니다.
    - **다양한 미디어 통합**
        - **이미지, 동영상, 음성 기록 등** 다양한 미디어를 수집할 수 있도록, 각각의 미디어 형식에 맞는 핸들러와 저장 로직을 구현합니다.
    - **실시간 컨텍스트 캡처**
        - 데이터를 캡처할 때 현재 열려있는 탭 정보, URL, 주변 검색어나 기타 관련 메타데이터를 함께 저장하는 로직을 마련합니다.
    
    ---
    
    ### 2. **자동화된 정리와 메타데이터 관리**
    
    - **자동 메타데이터 부여**
        - 수집된 데이터를 저장할 때, 해당 정보에 자동으로 타임스탬프, 출처 URL, 캡처 당시의 태그(예: 페이지 제목, 간단한 키워드) 등을 함께 기록합니다.
    - **중복 및 백업 관리**
        - **중복 감지 알고리즘**: 데이터가 중복 저장되지 않도록 해시값이나 고유 식별자를 부여하고, 중복 여부를 확인하는 로직을 구현합니다.
        - **자동 백업 시스템**: 정기적으로 데이터를 클라우드나 로컬 저장소에 백업하는 기능을 구현해 데이터 무결성을 유지합니다.
    - **자동 분류 및 요약**
        - **자연어 처리(NLP) 도구**: OpenAI, Claude 등과 연동하여 텍스트 데이터를 요약하거나 카테고리 분류를 자동으로 진행합니다.
        - 사용자가 직접 분류하지 않아도, 시스템이 기본적으로 “읽기”, “아이디어”, “참고자료” 등으로 분류할 수 있도록 알고리즘을 개발합니다.
    
    ---
    
    ### 3. **강력한 검색과 연결성**
    
    - **메타데이터 기반 검색 엔진**
        - **인덱싱**: PostgreSQL, SQLite 같은 데이터베이스와 ElasticSearch, Tantivy 등을 활용하여, 텍스트 및 메타데이터에 대한 인덱스를 구축합니다.
        - **유의어 및 의미 기반 검색**: LLM(대형 언어 모델)과 연동해 단순 키워드 검색뿐 아니라 문맥이나 유의어 기반의 검색 기능을 제공합니다.
    - **연결성(네트워크 효과)**
        - **Knowledge Graph**: 수집된 데이터 간의 연관성을 자동으로 분석하여, 관련된 문서나 아이디어를 시각적으로 연결하는 기능을 도입할 수 있습니다.
    - **사용자 맞춤 검색 결과**
        - 사용자의 검색 이력과 선호도를 반영해, 개인화된 검색 결과를 제공하는 로직을 추가합니다.
    
    ---
    
    ### 4. **사용자 친화적인 인터페이스**
    
    - **경량화 및 직관적인 디자인**
        - **프론트엔드 스택**: React + TypeScript, UnoCSS, Vite 등을 활용해 빠르고 반응성이 좋은 UI를 구축합니다.
        - **모듈식 인터페이스**: 필요한 정보에만 집중할 수 있도록 사이드바, 팝업, 드래그 앤 드롭 등 직관적인 인터페이스를 설계합니다.
    - **작업 흐름 방해 최소화**
        - **항상 떠 있는 메모 기능**: 예를 들어, 우측 하단에 가볍게 떠 있는 메모 위젯이나 단축키를 통해 언제든 접근할 수 있는 기능을 제공합니다.
        - **커스터마이징 옵션**: 기본 세팅은 간단하지만, 사용자가 필요에 따라 인터페이스를 조정할 수 있도록 설정 옵션을 제공합니다.
    - **반응형 디자인**
        - 데스크탑, 태블릿, 모바일 등 다양한 환경에서 동일한 사용자 경험을 제공할 수 있도록 반응형 UI를 개발합니다.
    
    ---
    
    ### 5. **협업과 확장성**
    
    - **실시간 협업 도구**
        - **백엔드**: Spring 기반의 백엔드 서버를 통해 실시간 데이터 동기화 및 협업 기능(예: 공동 편집, 댓글 달기)을 구현합니다.
        - **WebSocket**: 실시간 업데이트와 협업 기능을 위해 WebSocket이나 Server-Sent Events(SSE) 같은 기술을 도입합니다.
    - **클라우드 및 데이터 동기화**
        - **클라우드 기반 저장소**: AWS와 같은 클라우드 서비스에 데이터를 저장하고, 여러 디바이스 간 동기화를 지원합니다.
        - **API 및 확장성**: 외부 애플리케이션과 연동할 수 있도록 RESTful API 혹은 GraphQL을 제공하며, 이를 통해 다양한 타사 도구와의 통합을 가능하게 합니다.
    - **모듈화된 아키텍처**
        - 시스템의 각 기능(수집, 정리, 검색, 메모 등)을 모듈화하여 독립적으로 업데이트하고 확장할 수 있도록 설계합니다. 이를 통해 사용자가 필요에 따라 기능을 추가하거나 변경할 수 있습니다.
    
    ---
    
    ### 종합적으로
    
    각 항목은 **사용자 경험(UX)**과 **기술적 효율성**을 동시에 달성하기 위해,
    
    - **최신 프론트엔드 기술**을 활용하여 인터페이스를 빠르고 직관적으로 만들고,
    - **백엔드와 데이터베이스, 검색 엔진**을 연동해 데이터의 무결성과 검색의 효율성을 보장하며,
    - **AI/NLP 기술**을 통해 자동 분류, 요약, 유의어 검색 등 고급 기능을 구현하고,
    - **실시간 협업 및 클라우드 동기화** 기능으로 여러 사용자 간의 원활한 데이터 공유를 지원하는 방식으로 가능해집니다.
    
    이러한 접근을 통해, 단순한 기록 도구가 아니라 **사용자가 실제로 “필요하다”라고 느낄 만큼의 가치를 제공하는 통합 정보 관리 플랫폼**을 구현할 수 있습니다.
    

### 어떤 프로그램?

- 사용자가 정보 수집 시 **빠르고 가볍게** 캡처할 수 있고,
- 수집된 정보가 **자동으로 정리 및 보존**되며,
- 나중에 **필요한 순간 쉽게 검색하고 연결**할 수 있는,**기록의 전체 라이프사이클(생산 → 정리 → 활용)을 방해하지 않는 도구**

### 방향성|철학|바램

접근성

직관성

심플

작업 흐름에 해가 되지 않게

시간 절약

클릭 횟수 최소

기본 세팅은 권장 세팅

사용자의 에너지 아껴주기

사용자의 인지적, 작업적 부담을 최소화하면서 정보의 수집, 정리, 검색, 활용을 자연스럽게 이어주는 경험

### 기록학

진본성: 원본 보존, 출처 정보 저장

무결성: 자동 백업, 중복 방지

맥락성: 수집 당시 컨텍스트(탭 정보, 주변 검색어, 연관 콘텐츠) 자동 저장

검색성: 메타데이터 기반 다양한 검색(키워드, 맥락, 유의어)

### 스택

Frontend: Tauri, Vite, React+TypeScript, UnoCSS

Backend: Spring

DataBase: PostgreSQL or SQLite, Redis

AI/NLP: OpenAI, Claude, Gemini, 

검색: Tantivy + LLM, ElasticSearch-rs

메모: Monaco Editor

베포: AWS

### UI/UX

### 수집 → 우선적으로 해결

### 정리

### 검색

### 메모

### 크로스 플랫폼

### 템플릿

### 클라우드

### 협업

### 사람들이 불편해 했던 것들

Notion → 복잡, 렉, → 직관성, 접근성

Obsidian → 렉, 

---

⚪ 사업을 위한 내용?

- 가설이란 것을 만들어보자.(시나리오를 생각 나는대로 쓰고 축약하자.)
    
    -불편사항(’Pain point’라고 불리는 사람들이 불편해 하는 것을 어떻게 바꿔주면 해결될지 설득하기 위한 것)
    
    누구나, ‘지식 관리자’라면 자료를 찾는데 너무 많은 시간과 에너지를 사용한다?
    
    -니즈(사람들이 원하는 것)
    
    - 해결(어떻게 해결할 수 있는지)
        
        데이터 수집을 원클릭 or 단축키
        
        검색과 자동정리/분류에 활용하기 위한 메타데이터를 가져옴
        
        유의어 검색
        
        Rust(WASM)와 Unocss(TailWindCSS에서 불필요한 코드를 제거한 버전)로 성능 좋은 프로그램을 만들어줌.
        
    - 여기서 시작해볼까.
        
        “사용자는 정보를 모으고 싶어하지만, 정리는 귀찮아하고, 나중에 꼭 필요할 때 쉽고 빠르게 찾길 원한다.”
        
        - 연동되지 않는 도구들을 사용하여 정보가 분산된다.
        - 정리에 부담이 있다.
        - 가볍게 저장해놓을 공간이 없다.
        - 필요할 때 찾기 어렵다.
        
        레퍼런스를 최대한 많이 찾고 - 찾은 정보들을 정독하며 다른 공간에 빼놓고 - 빼놓은 정보들을 정리한 뒤 - 아이디어를 붙이는 것을 쉽게 하게 하고싶다.
        
        인터넷에서 레퍼런스를 찾으면 텍스트(한 줄, 한 문장, 원하는 만큼 드래그.), 이미지&스크린샷(window + shift + s 버튼은 윈도우11의 기본 스크린샷 저장 버튼이다. 스크린샷 폴더에 저장되기에, 그 경로를 링크하면 어떨까.), 동영상(), 클립보드, 
        
    - 아무튼간에 정리하자면
        
        수집하는 과정이 번거롭지 않아야 해. 최대한 많은 정보들 수집해야 하기에.
        
        극한으로..
        
    - 내가 해야만 하는 이유. → 사명감
        
        몇 년을 여기 쏟아부어서 문제가 해결됐을 때, 그만한 가치가 있는지? → 끈기 열정 설렘?
        
    - 세상을 바꿀 방법
        
        정리를 하고 여유를 가질 수 있다면ㅇㅁㄴㅇㅁㄴㅇㄴㅁ롱ㄴ마ㅗ허ㅣㅏㅗ너히ㅏㅗㄴㅇ러ㅏㅣㅗㅇㄴ머ㅏㅗ허ㅏㅣㅗㄴ럼니ㅏㅣ;ㅏ’;’ㅁㅇ랑ㅎ;ㅓㅁ;’ㅏㄴㅁㄹ뢰;ㅓ
        
        노화를 해결하는 부분을 건
        
- 타겟
    
    지식 관리자(창업가, 관리직)
    
    지식 노동자(사무직)
    
    연구직
    
    학생
    
    크리에이터
    
    솔로프리너(Solopreneur)(1인 창업가)
    
    프리랜서
    
- 목표
    
    사용자의 에너지를 최소화하고, 데이터 관리 효율성 극대화.
    
    - 기록학에 기반해볼까 해봤던 내용들
        - 진본성: 원본 보존, 출처 정보 저장
        - 무결성: 자동 백업, 중복 방지
        - 맥락성: 수집 당시 컨텍스트(탭 정보, 주변 검색어, 연관 콘텐츠) 자동 저장
        - 검색성: 메타데이터 기반 다양한 검색(키워드, 맥락, 유의어)
        
        Records Continuum Model:
        
        1. 데이터 수집(생산)
        2. 메타데이터 부여(포착)
        3. 체계적 정리(조직화)
        4. 실제 활용(다원화)
        → 이 흐름을 자동화, 자연스럽게 이어지게 함.
- 비즈니스 모델
    - 구독
    - 결제
    - 크롬 확장 프로그램
    - 앱스토어
    - 구글 플레이스토어
- 시장 포지션
    
    생산성 관리 도구
    
    퍼스널 지식관리 도구
    
    노코드 AI 생산성 플랫폼
    
- 경쟁 제품
    - Notion
        
        Luci - 복잡하고 렉걸리고 접근성 떨어진다.
        
        카이스트 대표님 - 렉걸리고 접근성 떨어진다.
        
    
    Obsidian
    
    Evernote
    
    OneNote
    
    Pocket
    
    Instapaper
    
    Readwise
    
    Liner
    
    Roam Research
    
    Logseq
    
    https://play.google.com/store/apps/details?id=com.diffathy.bbapp&hl=ko
    
    https://timeblocks.com/
    
    https://apps.apple.com/kr/app/dailytodo-%EB%8D%B0%EC%9D%BC%EB%A6%AC%ED%88%AC%EB%91%90/id1461453227
    
    https://play.google.com/store/apps/details?id=com.undefined.mate&hl=ko
    
- 의견
    1. 정윤이형 - "옵시디언 잘 쓰고 있어서 괜찮아. 맥북의 미션 컨트롤이나 핫코너처럼 우측 하단에 뜨는 메모 기능은 어떨까?"
    2. 김성수 대표님 - "노션은 렉이 심하고 옵시디언은 협업 기능이 없는데, 협업 기능만 있으면 사용하겠다."
    3. 단짝 친구 - "그냥 있는 걸 쓴다. 사람은 눈앞에 보이는 걸 쓰게 돼. 난 평소에 윈도우 메모장을 우측에 세로로 길게 띄워둔다."
    4. IR 멘토님 - "기록해둔 링크를 2줄로 요약해주는 기능이 있으면 쓰겠다. 정말 필요한 기능이다."
    5. 기록학자 김익한 교수님 - "초기 단계에서는 심플하게 메모를 할 수 있고, 자동 분류나 요약 기능을 통해 쉽게 데이터베이스로 관리할 수 있는 기능이 있다면 좋겠다고 생각해 보았습니다."
    6. 수환이 - 
    7. 영의님 - "웹 스크래핑? Readwise, Omnivore, Mymind, Fabric 있죠. 전 Fabric으로 정착했어요."
    8. 연봉 3억 블록체인 개발자 조엘님 - 아아 저는 그냥 노션에 무엇이든 다 기록하는 편인데요. 기록들이 모두 파편화되어 있어서 이어지지 않는 느낌이에요. 그래서 그 문제를 해결하는 게 Knowledge Graph라고 생각해서 계속 만들어보려고 합니다. 그러니까 수많은 문서 간의 관련성을 알아보려고 할 때 사용하는 것 같아요.
    9. "혹시 옵시디언에서 어떤 개념이나 공부했던 것을 정리하고 이걸 시각화해주는 툴이나 사용법 혹시 아시는 부분 있으신가요? 옵시디언 아니더라도요~"
- 한 번 봐줘
    
    https://www.postype.com/@pedelogue/post/10288022