Todo
[[7 11-20 과거 총정리]]
[[4 기록]]
[[6 11-20 정리 - 1]]
[[9 11-20 총 정리 v2]]
[[10 스냅노트 완전명세서]]
[[11 구현]]

# 프로그램 소개

이름: 스냅노트

한 줄 요약 :
	사용자의 에너지를 최소화하면서 데이터를 수집하고 정리하여, 필요할 때 직관적으로 찾을 수 있게 해주는 AI 메모 & 정보 관리 생산성 소프트웨어(Productivity Software)

가설:
	"사용자는 정보를 모으고 싶어하지만,
	정리는 귀찮아하고,
	나중에 꼭 필요할 때 찾고 싶어한다."
	그렇기에 정보를 수집하기 편리하고 정리하는 데 에너지를 덜 쓰며 직관적인 UX와 LLM이 만들어준 요약과 키워드로 유의어 포함 검색 시스템을 접근성 좋게 만들어 주고, 프로그램은 Rust, Tauri, UnoCSS를 사용하여 최대한 가볍고 빠르게 동작할 수 있도록 만들어준다.
	메모장은 VSCode의 Ctrl + D 다중 커서 기능으로 편집을 효율적으로 만들어주고 Rust의 Monaco Editor 

가설 확장:
- 사용자들은 여러 도구를 사용하며 정보 관리에 너무 많은 에너지를 소비중
- 기존 도구들은 진입장벽이 높거나 복잡하고 렉걸림(Obsidian, Notion)
- 정보의 맥락이 저장 과정에서 손실됨(맥락 저장이 필요한지 판단보류)
- 저장된 정보를 찾는 과정이 비효율적인 경우가 많다

코어기능:
1. 수집 (원클릭 수집)
- 단축키 or 클릭 한 번에 수집
- 원본 보존(진본성)
	- 메모:
	- 텍스트 하이라이트: 확장 프로그램 or 단축키로 가져오기
	- 링크: URL, 도메인
	- 이미지: 다운로드
	- 스크린샷: 
	- 클립보드: 클립보드
- 메타데이터 수집(시간, 출처(URL), 도메인, 도메인 아이콘, 링크 제목,)
- 맥락데이터 수집(현재 작업 환경, 탭, 방문 기록, 주변의 컨텍스트(1~2줄 앞 뒤 텍스트?)

2. 정리
- 맥락 캡처(작업 맥락을 분석할 메타데이터를 추출할 수 있을까)
- 사용자가 만든 폴더 or 폴더 관리 권한을 AI에게 줌. Obsidian이랑 Cursor랑 연동한 사례
- 링크는 도메인끼리 연결 or 날짜 별로 같은 도메인끼리 합치기
- 수집된 내용에서 다시 한 번 스크랩
- 버전관리 시스템
- 교차검증

3. 검색
- 키워드/맥락/유의어 검색

4. 메모
- Monaco Editor
- Ctrl + D 기능

5. 기타
- 최적화: Rust
- UI
- 보안

시장 카테고리:

1. **Personal Knowledge Management (PKM) 도구**
- 개인 지식 관리 도구
- 디지털 노트테이킹
- 정보 큐레이션

2. **Information Management Software**
- 데이터 수집/관리 도구
- 디지털 아카이빙 솔루션
- 콘텐츠 관리 시스템(CMS)

3. 노코드 AI 플랫폼
- 


유사 업종 제품:

1. **노트테이킹 앱**
- Evernote
- OneNote
- Notion

2. **정보 수집 도구**
- Pocket
- Instapaper
- Readwise
- Liner

3. **지식 관리 도구**
- Obsidian
- Roam Research
- Logseq

시장 포지션:

1. 타겟
- 디지털 노마드
- 지식 노동자
- 연구자/학생
- 콘텐츠 크리에이터
- 솔로프리너(Solopreneur)

철학:
	심플 is best.
	접근성, 직관성, 사용자의 에너지를 줄여주는 개발자.
	작업 흐름을 방해하지 않기.
	사용자의 시간을 줄여주는 개발.
	우리의 시선으로 권장 설정을 기본으로 해두고, 커스터마이즈 기능을 제공하여 사용자의 불편함 최소화(사용자가 어플을 설정하며 들 에너지도 생각)
	터치 한 번이라도 줄이기.
	
	정리는 프로그램이, 활용은 사용자가

UI:
	벽돌형태 카드 형식 vs 직사각형 카드 형식
	WCAG 3.0 웹 콘텐츠 접근성 가이드 3.0을 지킬 수도 있음
	버튼, 카드, 리스트, 모달의 템플릿을 만들어둘 수 있음

스택:
   - 프론트엔드: Tauri, Vite, React + TypeScript, UnoCSS, Rust, WebAssembly(WASM)
   - 백엔드: Rust, Tokio, PostgreSQL/SQLite, Redis
   - AI: Claude-3.5-sonnet 10/22
   - 검색 엔진: Tantivy + LLM or ElasticSearch-rs

2목
코어기능 먼저 체크 하고

코어기능 만들어서

1개월 내로 판매해보기

너라면 어떻게 설계할래?

프로젝트 구조:
아키텍처 설계
디자인 패턴

철학에 의거해서
프로그램이 사용자의 에너지를 최대한 아껴줘야 하니까
개인 생산성 관리
Rust WebAssembly

데이터 설계

mvp 만들어야지

구체적인 질문을 두 줄로

질문:
이건 스냅노트라는 AI 개인 생산성 관리 프로그램이야.
사람들이 데이터를 수집하는데 이러한 제약이 있다고 생각해서 기획하게 된 프로그램이야.
래퍼런스나 누군가에게 내가 보았던 유튜브 영상, 인스타, 링크 등을 잘 수집하지 않으니까 사람들에게 나의 생각을 전달하기에 어려움이 생긴다고 생각했어.
사람들이 너무 여러 도구를 사용해서 정보를 모아둬. 윈도우 스크린샷, 카카오톡 나에게 보내기, 인스타 저장기능, 유튜브 재생목록, 북마크, 클립보드 등.
내가 어디에 정보를 저장했는지 헷갈릴 때가 생기고, 찾아보기도 번거롭지.
그래서 사람들이 정보를 수집하는데 한 도구만으로 모든 수집 과정을 해결할 수 있기를 바랬어. 동시에 잘 정리되고 찾아보기도 쉽게 만들어야 하지.

수집은 바로바로 해야하니까 정말 빠른 수집 방법이 필요했고 그게 간단한 단축키 하나로 수집하는 거였어. 그리고 각 데이터에 수집 시간, URL, URL의 제목과 favicon과 LLM으로 정보를 표현할 수 있는 3가지 키워드와 키워드가 포함된 한 줄 요약, 그리고 가능하다면 맥락 데이터까지 메타데이터 수집 과정에 저장해둬 정리와 검색을 할 때 사용하는거지.
정보를 나열하거나 정리하는 것은 저장된 메타데이터를 활용해 자동으로 정리해주는 생각을 했는데 어떻게 해야할지 아이디어가 확실하진 않아. 왜냐면 사용자가 주체가 되어 주도권을 잡고 정리하는게 나을지 어떤 방법이 있는지 머릿속에 나열하지 못해서 그런것 같아.
아무튼 잘 정리된 데이터들을 쉽고 빠르게 찾아볼 수도 있어야겠지. 먼저 홈 화면에서 수집된 데이터들을 잘 보아서 사용자가 뇌의 궁전을 그릴 수 있게 해주는게 좋겠지. 유의어 포함 검색 기능으로 키워드나 요약된 내용까지 검색되고 검색 결과도 잘 나열되어야 하겠지.

그래서 개발 스택은
최적화와 성능을 위해서 Rust를 골랐고
그래서 Tauri + Vite를 사용하게 될 거고,
UnoCSS를 사용해서 가볍고 빠르게 만들거야.
LLM은 어차피 모델만 불러오면 되니까 빈칸으로 둬.

비즈니스 모델은
개인 사이트 구독, 결제,
크롬 확장 프로그램
이렇게 생각해봤어.

자. 이렇게 해서 내가 어떻게 기획하게 되었는지를 말해보았어.

이 프로그램을 너라면 어떻게 설계할래?
아키텍처,
데이터 설계,
디자인 패턴,

그리고 가장 중요할 수 있는 UI/UX 설계 등.

https://play.google.com/store/apps/details?id=com.diffathy.bbapp&hl=ko

https://timeblocks.com/

https://apps.apple.com/kr/app/dailytodo-%EB%8D%B0%EC%9D%BC%EB%A6%AC%ED%88%AC%EB%91%90/id1461453227

https://play.google.com/store/apps/details?id=com.undefined.mate&hl=ko
폰트가 별로였고
글씨가 너무 작았다.

GoodNote
아이패드 손가락 탭 뒤로가기 두번 누르는거 x
생긴게 별로 마음에 안듬 손이 잘 안감 

Obsidian
너무 디지털 디지털 디지털 스러웠다.

# 주관적 작법 (1) - 메모하기
https://www.postype.com/@pedelogue/post/10288022

MVP(Minimum Viable Product)
작동하는 제품을 빠르게 출시해 시장 반응을 보는 데 초점을 둡니다.
하지만 작동만 하면 충분할까요?

MVE(Minimum Valuable Experience)
MVE는 고객에게 가치 있는 경험을 제공하는 데 중점을 둡니다.
단순히 기능을 넘어, 고객이 “이건 진짜 필요하다!“고 느끼게 만드는 것이 핵심입니다.